Problem Statement:-------------------------------
Given a sorted array of positive integers, design an algorithm and implement it using a program to find three indices i, j, k such that arr[i] + arr[j] = arr[k].


Algorithm:---------------------------------------
solution( arr[], n){ for (i=0 to i<n) i++
for (j = i + 1 to j < n) j++
for (k = j + 1 to k < n) k++
if (arr[i] + arr[j] = arr[k]){ Print i+1 , j+1 , k+1
return
}
Print "No sequence found"
}
Complexity Analysis:
Time Complexity: T(n) = O(n^3)
Space Complexity:
Worst Case=Best Case = Average case = (1) [ Constant ]











Source Code:----------------------------------------

#include <iostream> using namespace std;
void solution(int arr[],int n){ for (int i = 0; i< n; i++)
for (int j = i + 1; j < n; j++)
for (int k = j + 1; k < n; k++) if (arr[i] + arr[j] == arr[k]){
cout<< i+1 << " " << j+1 << " " << k+1<<endl;
return;
}
cout<< "No sequence found"<<endl;
}
int main(){ int t;
cin>> t; while (t >0){ int n;
cin>> n; int arr[n];
for (int i = 0; i< n; i++){
cin>>arr[i];
}
solution(arr, n);
t--;
}
}


